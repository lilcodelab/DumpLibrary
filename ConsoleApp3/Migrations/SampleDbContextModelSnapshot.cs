// <auto-generated />
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    partial class SampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp1.Author", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Robert C. Martin"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Martin Fowler"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Anders Hejlsberg"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Dump"
                        });
                });

            modelBuilder.Entity("ConsoleApp1.Book", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Agile Software Development, Principles, Patterns, and Practices"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Title = "Clean Code: A Handbook of Agile Software Craftsmanship"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Title = "The Clean Coder: A Code Of Conduct For Professional Programmers"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            Title = "Clean Architecture: A Craftsman's Guide to Software Structure and Design"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            Title = "Clean Agile: Back to Basics"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            Title = "Refactoring: Improving the Design of Existing Code"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            Title = "Planning Extreme Programming"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            Title = "Patterns of Enterprise Application Architecture"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            Title = "Refactoring: Improving the Design of Existing Code, Second Edition"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            Title = "The C# Programming Language"
                        });
                });

            modelBuilder.Entity("ConsoleApp1.Book", b =>
                {
                    b.HasOne("ConsoleApp1.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ConsoleApp1.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
